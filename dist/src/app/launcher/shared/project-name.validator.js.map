{"version":3,"sources":["../../../../../src/app/launcher/shared/project-name.validator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAW,MAAO,eAAA,CAAgB;AACtD,OAAO,EAAE,mBAAA,EAA6D,MAAO,gBAAA,CAAiB;AAC9F,OAAO,EAAE,UAAA,EAAW,MAAO,MAAA,CAAO;AAElC,OAAO,EAAE,sBAAA,EAAuB,MAAO,qCAAA,CAAsC;AAG7E;IAGE,uCAAoB,sBAA8C;QAA9C,2BAAsB,GAAtB,sBAAsB,CAAwB;QAF1D,YAAO,GAAG,wBAAwB,CAAC;IAE2B,CAAC;IAEvE,gDAAQ,GAAR,UAAS,OAAwB;QAC/B,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,oBAAoB,EAAE,CAAC,KAAK,EAAE,CAAC;IAClG,CAAC;IAED,2DAAmB,GAAnB,UAAoB,KAAU;QAA9B,iBAcC;QAbC,MAAM,CAAC,IAAI,UAAU,CAAC,UAAC,OAAO;YAC5B,IAAM,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACX,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;YACnD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,sBAAsB,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,UAAA,IAAI;oBAClE,IAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAC/B,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAU,GAAG,CAAC,UAAU,CAAC,IAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,EAAtE,CAAsE,CAC9E,CAAC;oBACF,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACnG,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,mDAAW,GAAnB,UAAoB,GAAW,EAAE,KAAU;QACzC,MAAM,UAAG,GAAC,GAAG,IAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAG;;IACrC,CAAC;IACI,wCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,uBAAuB;oBACjC,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,WAAW,EACrD,UAAU,CAAC,cAAM,OAAA,6BAA6B,EAA7B,CAA6B,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;iBAClE,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,4CAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,sBAAsB,GAAG;KAC/B,EAF6F,CAE7F,CAAC;IACF,oCAAC;CAvCD,AAuCC,IAAA;SAvCY,6BAA6B","file":"project-name.validator.js","sourceRoot":"","sourcesContent":["import { Directive, forwardRef } from '@angular/core';\nimport { NG_ASYNC_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { DependencyCheckService } from '../service/dependency-check.service';\n\n\nexport class ProjectNameValidatorDirective implements Validator {\n  private pattern = /^[a-z][a-z0-9-]{3,63}$/;\n\n  constructor(private dependencyCheckService: DependencyCheckService) { }\n\n  validate(control: AbstractControl): Observable<{ [key: string]: any }> {\n    return this.validRepositoryName(control.value).debounceTime(500).distinctUntilChanged().first();\n  }\n\n  validRepositoryName(value: any): Observable<{ [key: string]: any }> {\n    return new Observable((resolve) => {\n      const valid = this.pattern.test(value);\n      if (!valid) {\n        resolve.next(this.createError('pattern', value));\n      } else {\n        this.dependencyCheckService.getApplicationsInASpace().subscribe(apps => {\n          const applicationNames = apps.map(\n            app => app.attributes.name ? (<string>app.attributes.name).toLowerCase() : ''\n          );\n          resolve.next(applicationNames.indexOf(value) !== -1 ? this.createError('duplicate', value) : {});\n        });\n      }\n    });\n  }\n\n  private createError(key: string, value: any): any {\n    return { [key]: { value: value } };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[validateProjectName]',\n  providers: [{ provide: NG_ASYNC_VALIDATORS, useExisting:\n    forwardRef(() => ProjectNameValidatorDirective), multi: true }]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DependencyCheckService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}