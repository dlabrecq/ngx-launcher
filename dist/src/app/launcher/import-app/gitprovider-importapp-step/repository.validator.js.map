{"version":3,"sources":["../../../../../../src/app/launcher/import-app/gitprovider-importapp-step/repository.validator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgC,aAAA,EAAyB,MAAO,gBAAA,CAAiB;AACxF,OAAO,EAAE,SAAA,EAAW,KAAA,EAAM,MAAO,eAAA,CAAgB;AAGjD;IAAA;IAkBA,CAAC;IAfC,uDAAQ,GAAR,UAAS,OAAwB;QAC/B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC5E,CAAC;IACI,+CAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,sBAAsB;oBAChC,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,oCAAoC,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;iBACtG,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,mDAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,mDAAc,GAA2C;QAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,oBAAoB,EAAG,EAAE,EAAE;KAC7D,CAAC;IACF,2CAAC;CAlBD,AAkBC,IAAA;SAlBY,oCAAoC;AAoBjD,MAAM,8BAT8B,QAAiB;IAUnD,MAAM,CATC,UAAA,OAAU;QAUf,IATM,YAAA,GAAe,QAAA,CAAS,OAAC,CAAO,OAAC,CAAO,KAAC,CAAK,KAAK,CAAA,CAAE,CAAC;QAU5D,MAAM,CATC,YAAA,CAAa,CAAA,CAAE,IAAA,CAAK,CAAA,CAAE,EAAE,UAAA,EAAY,EAAE,KAAA,EAAO,OAAA,CAAQ,KAAC,EAAK,EAAE,CAAE;IAUxE,CAAC,CATC;AAUJ,CAAC","file":"repository.validator.js","sourceRoot":"","sourcesContent":["import { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\nimport { Directive, Input } from '@angular/core';\n\n\nexport class ExistingRepositoryValidatorDirective implements Validator {\n   repoList: string[];\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    return this.repoList ? repositoryValidator(this.repoList)(control) : null;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[existingRepository]',\n  providers: [{provide: NG_VALIDATORS, useExisting: ExistingRepositoryValidatorDirective, multi: true}]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'repoList': [{ type: Input, args: ['existingRepository', ] },],\n};\n}\n\nexport function repositoryValidator(repoList: string[]): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const existingRepo = repoList.indexOf(control.value) !== -1;\n    return existingRepo ? null : { 'notExist': { value: control.value } };\n  };\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}