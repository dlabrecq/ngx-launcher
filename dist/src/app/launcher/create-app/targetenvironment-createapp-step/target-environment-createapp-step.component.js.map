{"version":3,"sources":["../../../../../../src/app/launcher/create-app/targetenvironment-createapp-step/target-environment-createapp-step.component.ts"],"names":[],"mappings":"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","file":"target-environment-createapp-step.component.js","sourceRoot":"","sourcesContent":["import {\n  animate,\n  Component,\n  Host,\n  Input,\n  OnDestroy, Optional,\n  state,\n  style,\n  transition,\n  trigger,\n  ViewEncapsulation\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Broadcaster } from 'ngx-base';\n\nimport { Selection } from '../../model/selection.model';\nimport { TargetEnvironment } from '../../model/target-environment.model';\nimport { TargetEnvironmentService } from '../../service/target-environment.service';\nimport { LauncherComponent } from '../../launcher.component';\nimport { LauncherStep } from '../../launcher-step';\nimport { Cluster } from '../../model/cluster.model';\nimport { TokenService } from '../../service/token.service';\n\n\nexport class TargetEnvironmentCreateappStepComponent extends LauncherStep implements OnDestroy {\n   id: string;\n\n  private subscriptions: Subscription[] = [];\n  private _targetEnvironments: TargetEnvironment[];\n  private _clusters: Cluster[] = [];\n\n  constructor( public launcherComponent: LauncherComponent,\n              private targetEnvironmentService: TargetEnvironmentService,\n               private tokenService: TokenService,\n              private broadcaster: Broadcaster,\n              public _DomSanitizer: DomSanitizer) {\n    super();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n\n  ngOnInit() {\n    this.launcherComponent.addStep(this);\n    setTimeout(() => {\n      this.restoreSummary();\n    }, 10); // Avoids ExpressionChangedAfterItHasBeenCheckedError\n    if (this.tokenService) {\n      this.subscriptions.push(this.tokenService.clusters.subscribe(clusters => {\n        this._clusters = clusters.sort(this.clusterSortFn);\n      }));\n    }\n    this.subscriptions.push(this.targetEnvironmentService.getTargetEnvironments().subscribe((val) => {\n      if (val !== undefined) {\n        this._targetEnvironments = val;\n      }\n    }));\n  }\n\n  // Accessors\n\n  /**\n   * Returns indicator that step is completed\n   *\n   * @returns {boolean} True if step is completed\n   */\n  get completed(): boolean {\n    return this.launcherComponent.summary.targetEnvironment\n      && (this.launcherComponent.summary.targetEnvironment === 'zip' || !!this.launcherComponent.summary.cluster);\n  }\n\n  /**\n   * Returns target environments to display\n   *\n   * @returns {TargetEnvironment[]} The target environments to display\n   */\n  get targetEnvironments(): TargetEnvironment[] {\n    return this._targetEnvironments;\n  }\n\n  /**\n   * Returns clusters to display\n   *\n   * @returns {Cluster[]} The clusters to display\n   */\n  get clusters(): Cluster[] {\n    return this._clusters;\n  }\n\n  // Steps\n\n  navToNextStep(): void {\n    this.launcherComponent.navToNextStep('TargetEnvironment');\n  }\n\n  showStep(id: string, reset: boolean): void {\n    if (reset) {\n      this.launcherComponent.summary.targetEnvironment = undefined;\n    }\n    this.launcherComponent.showStep(id);\n  }\n\n  selectCluster(cluster?: Cluster): void {\n    this.launcherComponent.summary.cluster = cluster;\n    this.broadcaster.broadcast('cluster', cluster);\n  }\n\n  updateTargetEnvSelection(target: TargetEnvironment): void {\n    if (target.id === 'zip') {\n      this.selectCluster(null);\n    }\n  }\n\n  // Private\n\n  // Restore mission & runtime summary\n  private restoreSummary(): void {\n    let selection: Selection = this.launcherComponent.selectionParams;\n    if (selection !== undefined) {\n      this.launcherComponent.summary.targetEnvironment = selection.targetEnvironment;\n      this.launcherComponent.summary.cluster = selection.cluster;\n    }\n  }\n\n  private clusterSortFn(a: Cluster, b: Cluster): number {\n    if (a.connected) {\n      return -1;\n    }\n    return a.name.localeCompare(b.name);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  encapsulation: ViewEncapsulation.None,\n  selector: 'f8launcher-targetenvironment-createapp-step',\n  templateUrl: './target-environment-createapp-step.component.html',\n  styleUrls: ['./target-environment-createapp-step.component.less']\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LauncherComponent, decorators: [{ type: Host }, ]},\n{type: TargetEnvironmentService, },\n{type: TokenService, decorators: [{ type: Optional }, ]},\n{type: Broadcaster, },\n{type: DomSanitizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}