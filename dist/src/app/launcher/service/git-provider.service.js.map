{"version":3,"sources":["../../../../../src/app/launcher/service/git-provider.service.ts"],"names":[],"mappings":"AAIA;;GAEG;AACH;IAAA;IA8BA,CAAC;IAAD,yBAAC;AAAD,CA9BA,AA8BC,IAAA","file":"git-provider.service.js","sourceRoot":"","sourcesContent":["import { Observable } from 'rxjs';\n\nimport { GitHubDetails } from '../model/github-details.model';\n\n/**\n * Abstract GitHub provider service provided to ensure consumer implements this pattern\n */\nexport abstract class GitProviderService {\n  /**\n   * Connect GitHub account\n   *\n   * @param {string} redirectUrl The GitHub redirect URL\n   */\n  abstract connectGitHubAccount(redirectUrl: string): void;\n\n  /**\n   * Returns GitHub details associated with the logged in user\n   *\n   * @returns {Observable<GitHubDetails>} The GitHub details associated with the logged in user\n   */\n  abstract getGitHubDetails(): Observable<GitHubDetails>;\n\n  /**\n   * Returns true if GitHub repo exists\n   *\n   * @param {string} fullName The GitHub full name (e.g., fabric8-launcher/ngx-launcher)\n   * @returns {Observable<boolean>} True if GitHub repo exists\n   */\n  abstract isGitHubRepo(org: string, repoName: string): Observable<boolean>;\n\n  /**\n   * Returns List of GitHub repos\n   *\n   * @param {string} org The GitHub Organisation (e.g., fabric8-launcher)\n   * @returns {Observable<any>} List of GitHub repos\n   */\n  abstract getGitHubRepoList(org: string): Observable<any>;\n}\n"]}